colorscheme desertex
set global indentwidth 2
set global termcmd "st sh -c"

hook global WinSetOption filetype=kakrc %{
  set buffer indentwidth 4
}

addhl global/ number-lines -hlcursor -relative
addhl global/ show-matching

# hook global WinCreate .* %{
#   auto-pairs-enable
# }

map -docstring "Open file via dmenu" global user o %{: dmenu-open .<ret>}

# Clipboard commands
declare-user-mode clip

map global user p ': enter-user-mode clip<ret>' \
  -docstring 'clipboard commands'

map global clip y %{<a-|>xsel -ib<ret>} \
  -docstring "Copy selection to X11 clipboard"

map global clip p %{<a-!>xsel -bo<ret>} \
  -docstring "Paste X11 clipboard after selection" 
map  global clip P %{!xsel -bo<ret>} \
  -docstring "Paste X11 clipboard before selection"

# Formatting commands
declare-user-mode fmt

map global user f ': enter-user-mode fmt<ret>' \
  -docstring 'formatting commands'

map -docstring "Comment the current line" global fmt c %{: comment-line<ret>}
map -docstring "Comment the current selection" global fmt C %{: comment-block<ret>}
map -docstring "Run formatter on file" global fmt f %{: format<ret>}
map -docstring "Format selection to 80 column width" global fmt w '|fmt -w80<ret>'

# New window commands
declare-user-mode new

map global user n ': enter-user-mode new<ret>' \
  -docstring 'New client/terminal commands'

map -docstring "Create a new kak client for the current session" global new s %{: new<ret>}
map -docstring "Open terminal window" global new t %{: terminal zsh<ret>}
map -docstring "Open ranger in new terminal window" global new T %{: terminal ranger<ret>}

map global user l ': enter-user-mode lsp<ret>' \
  -docstring 'lsp commands'

eval %sh{kak-lsp --kakoune -s $kak_session}
nop %sh{ (kak-lsp -s $kak_session -vvv) > /tmp/kak-lsp.log 2>&1 /dev/null & }
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
  lsp-enable-window
}
